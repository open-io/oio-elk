[DEFAULT]
# How often to run queries.
QueryIntervalSecs = 10
# How long to wait for a query to return before timing out.
QueryTimeoutSecs = 5
# The indices to run the query on.
# Any way of specifying indices supported by your Elasticsearch version can be used.
QueryIndices = oio-*


# Select all logs failure where the loglevel is egal to "err"
[query_failure_log]

QueryJson = {
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "loglevel": "err"
          }
        }
      ],
      "filter": {
        "range": {
          "@timestamp": {
            "from": "now-60s"
          }
        }
      }
    }
  }
 }

[query_code]
QueryJson = {
        "query": {
          "bool": {
            "filter": {
              "range": {
                "@timestamp": {
                  "gte": "now-60d",
                  "lte": "now"
                }
              }
            }
          }
        },
        "aggs": {
          "servicetype": {
            "terms": {
              "field": "servicetype.keyword"
            },
            "aggs": {
              "return_code": {
                "terms": {
                  "field": "return_code"
                }
              }
            }
          }
        }
    }

[query_time]
QueryJson = {
    "query": {
      "bool": {
        "filter": {
          "range": {
            "@timestamp": {
              "gte": "now-10s",
              "lte": "now"
            }
          }
        }
      }
      },
      "aggs": {
        "servicetype": {
          "significant_terms": {
            "field": "servicetype.keyword"
          },
          "aggs": {
            "method": {
              "terms": {
                "field": "request_type.keyword"
              },
              "aggs": {
                "hostname": {
                  "terms": {
                    "field": "host.keyword"
                  },
                  "aggs": {
                    "average_time": {
                      "avg": {
                        "field": "request_time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

[query_]
QueryJson = {
    "query": {
      "bool": {
        "filter": {
          "range": {
            "@timestamp": {
              "gte": "now-10s",
              "lte": "now"
            }
          }
        }
      }
      },
      "aggs": {
        "servicetype": {
          "significant_terms": {
            "field": "servicetype.keyword"
          },
          "aggs": {
            "method": {
              "significant_terms": {
                "field": "request_type.keyword"
              },
              "aggs": {
                "hostname": {
                  "significant_terms": {
                    "field": "host.keyword"
                  },
                  "aggs": {
                    "percentiles": {
                      "percentiles": {
                        "field": "request_time",
                        "percents": [
                          95
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
  }


[query_bandwidth_in]
QueryJson =  {
  "query": {
    "bool": {
        "filter": {
          "range": {
            "@timestamp": {
              "gte": "now-10s",
              "lte": "now"
            }
          }
        }
      }
  },
  "aggs": {
    "sum": {
      "sum": {
        "field": "bytes_recvd"
      }
    }
  }
 }



[query_bandwidth_out]
QueryJson =  {
    "query": {
      "bool": {
          "filter": {
            "range": {
              "@timestamp": {
                "gte": "now-10s",
                "lte": "now"
              }
            }
          }
        }
    },
    "aggs": {
      "sum": {
        "sum": {
          "field": "bytes_sent"
        }
      }
    }
  }
[query_blob-indexer]
QueryJson = {
    "query": {
      "bool": {
        "must": [
          {
            "match": {
              "servicetype.keyword": "oio-blob-indexer"
            }
          }
        ],
        "filter": {
          "range": {
            "@timestamp": {
              "gte": "now-10s",
              "lte": "now"
            }
          }
        }
      }
    },
    "aggs": {
      "servicetype": {
        "terms": {
          "field": "servicetype.keyword"
        },
        "aggs": {
          "chunks_per_second": {
            "avg": {
              "field": "rate"
            }
          }
        }
      }
    }
 }
